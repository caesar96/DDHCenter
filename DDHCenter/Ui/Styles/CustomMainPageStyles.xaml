<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
        <Grid x:Name="root" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation From="1" To="0" BeginTime="00:00:00.00" Duration="00:00:00.100" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="hoverBackground"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.300" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="hoverBackground" From="0" To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="pressedBackground" BeginTime="00:00:00.00" Duration="00:00:00.300"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <!-- BACKGROUND COLOR WHEN MOUSE IS OVER THE BUTTON | COLOR DEL FONDO CUANDO EL MOUSE ESTE POR ENCIMA DEL BOTON -->
            <Border x:Name="hoverBackground" Opacity="0" Padding="{TemplateBinding Padding}" CornerRadius="5">
                <Border.Background>
                    <SolidColorBrush Color="#fff" Opacity=".2" />
                </Border.Background>
            </Border>

            <!-- BACKGROUND COLOR WHEN BUTTON IS PRESSED | COLOR DEL FONDO CUANDO EL BUTON SE HAYA PRESIONADO -->
            <Border x:Name="pressedBackground" Opacity="0"  Padding="{TemplateBinding Padding}" CornerRadius="5">
                <Border.Background>
                    <SolidColorBrush Color="#3f3f3f" Opacity=".6" />
                </Border.Background>
            </Border>

            <ContentPresenter  Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="RadioButtonTemplate" TargetType="RadioButton">
        <Grid x:Name="root" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.300" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="hoverBackground" From="0" To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="hoverBackground" Duration="0"/>
                            <DoubleAnimation From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="pressedBackground" BeginTime="00:00:00.00" Duration="00:00:00.300"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>

                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedBackground"  Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation From="1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="pressedBackground" BeginTime="00:00:00.00" Duration="00:00:00.100"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <!-- BACKGROUND COLOR WHEN MOUSE IS OVER THE BUTTON | COLOR DEL FONDO CUANDO EL MOUSE ESTE POR ENCIMA DEL BOTON -->
            <Border x:Name="hoverBackground" Opacity="0" Padding="{TemplateBinding Padding}" CornerRadius="5">
                <Border.Background>
                    <SolidColorBrush Color="#fff" Opacity=".2" />
                </Border.Background>
            </Border>

            <!-- BACKGROUND COLOR WHEN BUTTON IS PRESSED | COLOR DEL FONDO CUANDO EL BUTON SE HAYA PRESIONADO -->
            <Border x:Name="pressedBackground" Opacity="0"  Padding="{TemplateBinding Padding}" CornerRadius="5">
                <Border.Background>
                    <SolidColorBrush Color="#3f3f3f" Opacity=".6" />
                </Border.Background>
            </Border>

            <Border x:Name="CheckedBackground" Opacity="0"  Padding="{TemplateBinding Padding}" CornerRadius="5">
                <Border.Background>
                    <SolidColorBrush Color="#313131" Opacity=".6" />
                </Border.Background>
            </Border>


            <Border HorizontalAlignment="Left" Padding="20 10 10 10">
                <ContentPresenter  Margin="10,0,16,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
            </Border>

        </Grid>
    </ControlTemplate>

    <Style TargetType="RadioButton" x:Key="RadioButtonMainSideBarStyle">
        <!--Foreground="#fafafa" Height="50" Margin="10, 5, 10, 1" FontSize="12" FontWeight="Medium" HorizontalContentAlignment="Left" Cursor="Hand"-->
        <Setter Property="Foreground" Value="#fafafa" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Margin" Value="10 5 10 1" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template" Value="{StaticResource RadioButtonTemplate}"/>
    </Style>

    <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
        <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="materialDesign:ExpanderAssist.DownHeaderPadding" Value="24,12"/>
        <Setter Property="materialDesign:ExpanderAssist.UpHeaderPadding" Value="24,12"/>
        <Setter Property="materialDesign:ExpanderAssist.LeftHeaderPadding" Value="12,24"/>
        <Setter Property="materialDesign:ExpanderAssist.RightHeaderPadding" Value="12,24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Expanded">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Content">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Collapsed">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Content">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Hidden</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Content">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Content">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Hidden</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <DockPanel Background="{TemplateBinding Background}">
                            <ToggleButton x:Name="HeaderSite" BorderThickness="0" Cursor="Hand" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="15" IsTabStop="False" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0.87">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ExpanderAssist.DownHeaderPadding), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="0,0,16,0" VerticalAlignment="Center"/>
                                                            <ToggleButton Grid.Column="1" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center">
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Background="Purple">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                                <VisualStateGroup.Transitions>
                                                                                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                </VisualStateGroup.Transitions>
                                                                                                <VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unchecked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <materialDesign:PackIcon x:Name="ExpandPath" Foreground="{TemplateBinding Foreground}" Height="24" Kind="Adobe"  Opacity="0.38" RenderTransformOrigin="0.5,0.5" Width="24">
                                                                                            <materialDesign:PackIcon.RenderTransform>
                                                                                                <TransformGroup>
                                                                                                    <ScaleTransform/>
                                                                                                    <SkewTransform/>
                                                                                                    <RotateTransform/>
                                                                                                    <TranslateTransform/>
                                                                                                </TransformGroup>
                                                                                            </materialDesign:PackIcon.RenderTransform>
                                                                                        </materialDesign:PackIcon>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Border x:Name="ContentSite">
                                <Grid x:Name="ContentPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter x:Name="PART_Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" Opacity="0"/>
                                </Grid>
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="LayoutTransform" TargetName="ContentPanel">
                                <Setter.Value>
                                    <ScaleTransform CenterY="0.5" CenterX="1" ScaleX="{Binding Opacity, ElementName=PART_Content}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Height" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ExpanderAssist.RightHeaderPadding), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <ToggleButton Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" RenderTransformOrigin="0.5,0.5">
                                                                <ToggleButton.RenderTransform>
                                                                    <RotateTransform Angle="-90"/>
                                                                </ToggleButton.RenderTransform>
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Background="Transparent">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                                <VisualStateGroup.Transitions>
                                                                                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                </VisualStateGroup.Transitions>
                                                                                                <VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unchecked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <materialDesign:PackIcon x:Name="ExpandPath" Foreground="{TemplateBinding Foreground}" Height="24" Kind="KeyboardArrowDown" Opacity="0.38" RenderTransformOrigin="0.5,0.5" Width="24">
                                                                                            <materialDesign:PackIcon.RenderTransform>
                                                                                                <TransformGroup>
                                                                                                    <ScaleTransform/>
                                                                                                    <SkewTransform/>
                                                                                                    <RotateTransform/>
                                                                                                    <TranslateTransform/>
                                                                                                </TransformGroup>
                                                                                            </materialDesign:PackIcon.RenderTransform>
                                                                                        </materialDesign:PackIcon>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,16,0,0" Grid.Row="1" VerticalAlignment="Top"/>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="LayoutTransform" TargetName="ContentPanel">
                                <Setter.Value>
                                    <ScaleTransform CenterY="0.5" CenterX="0" ScaleX="{Binding Opacity, ElementName=PART_Content}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Height" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ExpanderAssist.LeftHeaderPadding), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <ToggleButton Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" RenderTransformOrigin="0.5,0.5">
                                                                <ToggleButton.RenderTransform>
                                                                    <RotateTransform Angle="90"/>
                                                                </ToggleButton.RenderTransform>
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Background="Transparent">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                                <VisualStateGroup.Transitions>
                                                                                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                </VisualStateGroup.Transitions>
                                                                                                <VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unchecked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <materialDesign:PackIcon x:Name="ExpandPath" Foreground="{TemplateBinding Foreground}" Height="24" Kind="KeyboardArrowDown" Opacity="0.38" RenderTransformOrigin="0.5,0.5" Width="24">
                                                                                            <materialDesign:PackIcon.RenderTransform>
                                                                                                <TransformGroup>
                                                                                                    <ScaleTransform/>
                                                                                                    <SkewTransform/>
                                                                                                    <RotateTransform/>
                                                                                                    <TranslateTransform/>
                                                                                                </TransformGroup>
                                                                                            </materialDesign:PackIcon.RenderTransform>
                                                                                        </materialDesign:PackIcon>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,16,0,0" Grid.Row="1" VerticalAlignment="Top"/>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="LayoutTransform" TargetName="ContentPanel">
                                <Setter.Value>
                                    <ScaleTransform CenterY="1" CenterX="0.5" ScaleY="{Binding Opacity, ElementName=PART_Content}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ExpanderAssist.UpHeaderPadding), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="0,0,16,0" VerticalAlignment="Center"/>
                                                            <ToggleButton Grid.Column="1" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                                                <ToggleButton.RenderTransform>
                                                                    <RotateTransform Angle="-180"/>
                                                                </ToggleButton.RenderTransform>
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Background="Transparent">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                                <VisualStateGroup.Transitions>
                                                                                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualTransition>
                                                                                                </VisualStateGroup.Transitions>
                                                                                                <VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unchecked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <materialDesign:PackIcon x:Name="ExpandPath" Foreground="{TemplateBinding Foreground}" Height="24" Kind="KeyboardArrowDown" Opacity="0.38" RenderTransformOrigin="0.5,0.5" Width="24">
                                                                                            <materialDesign:PackIcon.RenderTransform>
                                                                                                <TransformGroup>
                                                                                                    <ScaleTransform/>
                                                                                                    <SkewTransform/>
                                                                                                    <RotateTransform/>
                                                                                                    <TranslateTransform/>
                                                                                                </TransformGroup>
                                                                                            </materialDesign:PackIcon.RenderTransform>
                                                                                        </materialDesign:PackIcon>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Top"/>
                            <Setter Property="LayoutTransform" TargetName="ContentPanel">
                                <Setter.Value>
                                    <ScaleTransform CenterY="0" CenterX="0.5" ScaleY="{Binding Opacity, ElementName=PART_Content}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal">
                                                                    <Storyboard>
                                                                        <DoubleAnimation From="1" To="0" BeginTime="00:00:00.00" Duration="00:00:00.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="hoverBackground"/>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="MouseOver">
                                                                    <Storyboard>
                                                                        <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.300" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="hoverBackground" From="0" To="1"/>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Pressed">
                                                                    <Storyboard>
                                                                        <DoubleAnimation From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="pressedBackground" BeginTime="00:00:00.00" Duration="00:00:00.300"/>
                                                                    </Storyboard>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>

                                                        <!-- BACKGROUND COLOR WHEN MOUSE IS NORMAL | COLOR DEL FONDO CUANDO EL MOUSE ESTA NORMAL-->
                                                        <Border x:Name="normalBackground" Padding="{Binding (materialDesign:ExpanderAssist.UpHeaderPadding), RelativeSource={RelativeSource TemplatedParent}}" />

                                                        <!-- BACKGROUND COLOR WHEN MOUSE IS OVER THE BUTTON | COLOR DEL FONDO CUANDO EL MOUSE ESTE POR ENCIMA DEL BOTON -->
                                                        <Border x:Name="hoverBackground" Opacity="0" Padding="{TemplateBinding Padding}" CornerRadius="5">
                                                            <Border.Background>
                                                                <SolidColorBrush Color="#fff" Opacity=".2" />
                                                            </Border.Background>
                                                        </Border>

                                                        <!-- BACKGROUND COLOR WHEN BUTTON IS PRESSED | COLOR DEL FONDO CUANDO EL BUTON SE HAYA PRESIONADO -->
                                                        <Border x:Name="pressedBackground" Opacity="0"  Padding="{TemplateBinding Padding}" CornerRadius="5">
                                                            <Border.Background>
                                                                <SolidColorBrush Color="#3f3f3f" Opacity=".7" />
                                                            </Border.Background>
                                                        </Border>
                                                        <Border Padding="{Binding (materialDesign:ExpanderAssist.UpHeaderPadding), RelativeSource={RelativeSource TemplatedParent}}">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="0,0,16,0" VerticalAlignment="Center"/>
                                                                <ToggleButton Grid.Column="1" Foreground="#fafafa" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center">
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}">
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                        <Border Background="Transparent">
                                                                                            <VisualStateManager.VisualStateGroups>
                                                                                                <VisualStateGroup x:Name="CheckStates">
                                                                                                    <VisualStateGroup.Transitions>
                                                                                                        <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                                            <VisualTransition.GeneratedEasingFunction>
                                                                                                                <QuarticEase EasingMode="EaseOut"/>
                                                                                                            </VisualTransition.GeneratedEasingFunction>
                                                                                                            <Storyboard>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualTransition>
                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                                            <Storyboard>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualTransition>
                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                                            <Storyboard>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualTransition>
                                                                                                        <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                                            <VisualTransition.GeneratedEasingFunction>
                                                                                                                <QuarticEase EasingMode="EaseOut"/>
                                                                                                            </VisualTransition.GeneratedEasingFunction>
                                                                                                            <Storyboard>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualTransition>
                                                                                                    </VisualStateGroup.Transitions>
                                                                                                    <VisualState x:Name="Checked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                    <VisualState x:Name="Unchecked">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                </VisualStateGroup>
                                                                                            </VisualStateManager.VisualStateGroups>
                                                                                            <materialDesign:PackIcon x:Name="ExpandPath" Foreground="{TemplateBinding Foreground}" Height="24" Kind="KeyboardArrowDown" Opacity="0.38" RenderTransformOrigin="0.5,0.5" Width="24">
                                                                                                <materialDesign:PackIcon.RenderTransform>
                                                                                                    <TransformGroup>
                                                                                                        <ScaleTransform/>
                                                                                                        <SkewTransform/>
                                                                                                        <RotateTransform/>
                                                                                                        <TranslateTransform/>
                                                                                                    </TransformGroup>
                                                                                                </materialDesign:PackIcon.RenderTransform>
                                                                                            </materialDesign:PackIcon>
                                                                                        </Border>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                </ToggleButton>
                                                            </Grid>
                                                        </Border>

                                                    </Grid>


                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Storyboard x:Key="OpenMenu">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="MainPageSideBar">
            <EasingDoubleKeyFrame KeyTime="0" Value="275"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="CloseMenu">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="MainPageSideBar">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="275"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Style TargetType="RadioButton" BasedOn="{StaticResource MaterialDesignRadioButton}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="Grid.Column" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0, 0, 5, 0" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>

    </Style>

    <Style TargetType="TextBox" x:Key="MyTexBox" BasedOn="{StaticResource MaterialDesignFilledTextFieldTextBox}">
        <Setter Property="Margin" Value="4, 4, 4, 5" />
		<Setter Property="FontSize" Value="12" />
    </Style>
    <Style TargetType="PasswordBox" x:Key="MyPasswordBox" BasedOn="{StaticResource MaterialDesignFilledPasswordFieldPasswordBox}">
        <Setter Property="Margin" Value="4, 4, 4, 5" />
		<Setter Property="FontSize" Value="12" />
    </Style>

    <Style TargetType="DatePicker" x:Key="MyDatePicker" BasedOn="{StaticResource MaterialDesignFilledDatePicker}">
        <Setter Property="Margin" Value="4, 4, 4, 5" />
    </Style>
</ResourceDictionary>